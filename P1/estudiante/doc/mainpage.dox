/*! \mainpage Título de la página principal

@image html doxyque.png "Pie de foto"

# Información sobre Doxygen
Doxygen admite el uso de la [sintaxis de Markdown (Consulta aquí los comandos básicos)](https://www.markdownguide.org/basic-syntax).

Así como el uso de  <a href="https://htmlcheatsheet.com/">sintaxis <strong>HTML</strong></a>. Esto es especialmente útil
para aquellos aspectos que Markdown no permite modificar, como el <span  style="color:red">color</span>. Aunque es buena idea evitarlo en la medida de lo posible, por dos
motivos:

1. <span style="font-size:1.1em">Hace el código <strong>poco</strong> <span style="  background-image: linear-gradient(to left, #4285f4, #34a853, #fbbc05, #ea4335); -webkit-background-clip: text; color: transparent;"> <strong> LEGIBLE </strong> </span></span>
2. La idea detrás de Markdown es separar _aspecto_ y _contenido_. Y es una __gran idea__.

La forma más correcta de modificar el aspecto debería ser mediante un documento ``.css`` configurado en el archivo ``Doxyfile.in``.
Si te interesa, puedes echarle un vistazo a la [documentación](https://www.doxygen.nl/manual/customize.html) o a
temas customizados como [este](https://jothepro.github.io/doxygen-awesome-css/). Aunque el tema por defecto nos parece
perfecto, _CLÁSICO_. Así puedes centrarte en el contenido.

Por último, lo hemos visto en clase y hay suficientes ejemplos en el código fuente proporcionado, pero puedes consultar la
mayor parte de la sintaxis de Doxygen para comentar código en su
[documentación](https://www.doxygen.nl/manual/docblocks.html).


# Ejecutables

@image html invert.png
## Negativo:

Calcula el negativo de una imagen

> __negativo__ \<FichImagenOriginal\> \<FichImagenDestino\>
@param "<FichImagenOriginal>" Imagen PGM a la que se va a calcular
@param <FichImagenDestino> Imagen PGM resultado de calcular el negativo



## Subimagen
Extrae una subimagen dada una imagen dada de un tamaño igual o menor a la original

> __subimagen__ \<FichImagenOriginal\> \<FichImagenDestino\> \<fila\> \<columna\> \<fila_sub\> \<col_sub\>

@param "<FichImagenOriginal>" Imagen PGM a la que se va a calcular
@param <FichImagenDestino> Imagen PGM resultado de extraer subimagen
@param <fila> coordenada vertical de la imagen
@param <columna> coordenada horizontal de la imagen

    Son las coordenadas de la esquina superior izquierda de la nueva imagen
 @param <fila_sub> numero de filas de la nueva imagen
 @param <col_sub> numero de columnas de la nueva imagen



 ## icono

 realiza un zoom X2 a una porcion de la imagen pasada por parametros.

 > __zoom__ \<FichImagenOriginal\> \<FichImagenDestino\> \<fila\> \<columna\> \<lado\>

@param "<FichImagenOriginal>" Imagen PGM a la que se va a calcular
@param <FichImagenDestino> Imagen PGM resultado de extraer subimagen
@param <fila> coordenada vertical de la imagen
@param <columna> coordenada horizontal de la imagen
@param <lado> cantidad de filas/columnas de la nueva imagen



## icono

    Crea una imagen de tamaño reducido a partir de una mayor pasado por parametros

 > __icono__ \<FichImagenOriginal\> \<FichImagenDestino\> \<factor\>

@param "<FichImagenOriginal>" Imagen PGM a la que se va a calcular
@param <FichImagenDestino> Imagen PGM resultado de extraer subimagen
@param <factor> factor de reduccion de la imagen La imagen resultante tendrá floor(filas/factor), floor(columnas/factor)


## contraste

Altera el contraste de una imagen dados unos parametros de entrada
> __contraste__ \<FichImagenOriginal\> \<FichImagenDestino\> \<in1\> \<in2\> \<out1\> \<out2\>
@param "<FichImagenOriginal>" Imagen PGM a la que se va a calcular
@param <FichImagenDestino> Imagen PGM resultado de extraer subimagen
@param <in1> umbral inferior de la imagen de entrada
@param <in2> umbral superior de la imagen de entrada
 @param <out1> umbral inferior de la imagen de salida
 @param <out2> umbral superior de la imagen de salida

 ## barajar

 Altera el orden de las filas de una imagen dada
 > __barajar__ \<FichImagenOriginal\> \<FichImagenDestino\>
 @param "<FichImagenOriginal>" Imagen PGM a la que se va a calcular
 @param <FichImagenDestino> Imagen PGM resultado de barajar las filas

*/


/**
@page EJERCICIO 5

@section "Implementacion 1D"

codigo:

void Image::ShuffleRows() {
    const int p = 9973; CTE

    Image temp(rows,cols); CTE

    int newr; CTE

    for (int r=0; r<rows; r++){ 3*CTE
        newr = r*p % rows;3*CTE
        for (int c=0; c<cols;c++)
            temp.set_pixel(r,c,get_pixel(newr,c));  set_pixel-> O1  get_pixel-> O1
    }

    Copy(temp); = O(Filas*Columnas) -> Copia los pixeles 1 a 1 ...
}

Complejidad teorica ->  O(Filas*Columnas)+O(Filas*Columnas) = O(2*filas*columnas)


@section "Implementacion 2D"

codigo:

void Image::ShuffleRows(){
    const int p = 9973; CTE

    imagen::byte **im; CTE
    im=new imagen::byte * [get_rows()]; CTE

    int newr; CTE

    for (int r=0; r<get_rows(); r++){ Filas*( 3
        newr = r*p % get_rows(); 3
        im[r]=this->img[newr]; 2
    }) -> O(Filas)

    this->img=im; cte
}

complejidad teorica -> O(Filas)


*/